---
- hosts: web
  gather_facts: True
  remote_user: ubuntu
  become: yes
  become_method: sudo

  tasks:
    - name: Add NGINX Repository
      apt_repository:
        repo: ppa:nginx/stable
        state: present

    - name: Install NGINX
      apt:
        pkg: nginx
        state: present

    - name: Install NGINX Prometheus exporter
      apt:
        pkg: prometheus-nginx-exporter
        force_apt_get: true
        state: present
    
    - name: Copy NGINX configuration file that allows exporter
      copy:
        src: "nginx_default_config"
        dest: "/etc/nginx/sites-available/default"

    - name: Install Python3 and pip
      apt:
        name:
          - python3
          - pip
        state: present

    - name: Deploy Flask Website Content
      ansible.builtin.synchronize:
        src: /home/vagrant/project/application
        dest: /var/www/html

    - name: Install required pip packages
      pip:
        name:
          - flask
          - requests
          - cryptography
          - pymysql
          - gunicorn
        state: present
    
    # - name: Give Script permissions
    #   become: yes
    #   ansible.builtin.shell: cd /var/www/html/application/scripts && sudo chmod +x kill_proc_port_8000.sh
    
    # - name: Execute script
    #   become: yes
    #   ansible.builtin.shell: cd /var/www/html/application/scripts && sudo ./kill_process_on_port.sh

    - name: Allow Port 8000
      ufw:
        rule: allow
        port: 8000

    - name: Allow Port 9113
      ufw:
        rule: allow
        port: 9113

    - name: Bind gunicorn
      become: yes
      ansible.builtin.shell: cd /var/www/html/application && nohup gunicorn --bind 0.0.0.0:8000 app:app > /dev/null 2>&1 &
      #register: /output.txt
      #raw: cd /var/www/html/application && nohup gunicorn --bind 0.0.0.0:8000 app:app > /dev/null 2>&1 &

    - name: Reload nginx
      become: yes
      ansible.builtin.shell: sudo systemctl restart nginx

    - name: Enable prometheus exporter
      become: yes
      ansible.builtin.shell: nohup prometheus-nginx-exporter > /dev/null 2>&1 &

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted