<<<<<<< HEAD
[0m[1mgoogle_compute_firewall.send_thought_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/send][0m
[0m[1mgoogle_compute_instance.quote[0]: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/quote1][0m
[0m[1mgoogle_compute_instance.web[0]: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/web1][0m
[0m[1mgoogle_compute_instance.grafana: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west1-c/instances/grafana][0m
[0m[1mgoogle_compute_firewall.database_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/database][0m
[0m[1mgoogle_compute_firewall.frontend_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/frontend][0m
[0m[1mgoogle_compute_instance.balancer: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/balancer][0m
[0m[1mgoogle_compute_instance.web[1]: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/web2][0m
[0m[1mgoogle_compute_firewall.quote_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/quote][0m
[0m[1mgoogle_compute_instance.database: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/database][0m
[0m[1mgoogle_compute_instance.get[0]: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/get1][0m
[0m[1mgoogle_compute_firewall.grafana_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/grafana][0m
[0m[1mgoogle_compute_firewall.get_thought_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/get][0m
[0m[1mgoogle_compute_instance.send[0]: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west2-c/instances/send1][0m
[0m[1mgoogle_compute_firewall.prometheus_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/prometheus][0m
[0m[1mgoogle_compute_instance.prometheus: Refreshing state... [id=projects/agisit-project-g1/zones/europe-west1-c/instances/prometheus][0m
[0m[1mgoogle_compute_firewall.web_rules: Refreshing state... [id=projects/agisit-project-g1/global/firewalls/web][0m

[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mbalancer = "34.89.41.57"
balancer_ssh = "https://www.googleapis.com/compute/v1/projects/agisit-project-g1/zones/europe-west2-c/instances/balancer"
database = "34.89.52.78"
database_ssh = "https://www.googleapis.com/compute/v1/projects/agisit-project-g1/zones/europe-west2-c/instances/database"
get_thoughts_IPs = tolist([
  "get1 = 34.142.10.79",
])
grafana = "35.195.148.153"
prometheus = "34.22.231.253"
quote_IPs = tolist([
  "quote1 = 34.89.100.19",
])
send_thoughts_IPs = tolist([
  "send1 = 34.89.114.118",
])
web_IPs = tolist([
  "web1 = 35.246.82.79",
  "web2 = 34.147.224.117",
=======

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # google_compute_firewall.database_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "database_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "database"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "database",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "3306",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.frontend_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "frontend_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "frontend"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "balancer",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "80",
              [32m+[0m[0m "443",
              [32m+[0m[0m "8000",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.get_thought_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "get_thought_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "get"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "get",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "8002",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.grafana_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "grafana_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "grafana"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "grafana",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "3000",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.prometheus_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "prometheus_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "prometheus"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "prometheus",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "9090",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.quote_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "quote_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "quote"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "quote",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "8001",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.send_thought_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "send_thought_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "send"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "send",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "8003",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_firewall.web_rules[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "web_rules" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "web"
      [32m+[0m[0m network            = "default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "agisit-project-g1"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "web",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "8000",
              [32m+[0m[0m "9113",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_instance.balancer[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "balancer" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "balancer"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "balancer",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.database[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "database" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "database"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "database",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.get[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "get" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "get1"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "get",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.grafana[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "grafana" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "grafana"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "grafana",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west1-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.prometheus[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "prometheus" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "prometheus"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "prometheus",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west1-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.quote[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "quote" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "quote1"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "quote",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.send[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "send" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "send1"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "send",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.web[0][0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "web" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "web1"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "web",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1m  # google_compute_instance.web[1][0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "web" {
      [32m+[0m[0m can_ip_forward       = false
      [32m+[0m[0m cpu_platform         = (known after apply)
      [32m+[0m[0m current_status       = (known after apply)
      [32m+[0m[0m deletion_protection  = false
      [32m+[0m[0m effective_labels     = (known after apply)
      [32m+[0m[0m guest_accelerator    = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance_id          = (known after apply)
      [32m+[0m[0m label_fingerprint    = (known after apply)
      [32m+[0m[0m machine_type         = "n1-standard-1"
      [32m+[0m[0m metadata             = {
          [32m+[0m[0m "ssh-keys" = <<-EOT
                ubuntu:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDGk6EtNmzXm6v+pFiIse268EGcos6rKGoDJqTyov/PUOe29oSdBKkMCvHpP+CfGisNVJDfPeGgXOBkFkXyTQw0QbbqtE9aikPD4deXCimiRl+mZVzzaUDStmGW9M5mT8ylWQU+zGcXgpXPickI5EvRxsG0Bmnbet46RADVKRyvMOiuk2kbQ5aPh0jp1VdAqfCtJRBXVJo5FeA6RqNp5dBBJedzqan+OM+qyhK5RhXH1hr6ugWUCmfaWB1j4tilQi7IWSshnIBRiZ9OrhHbDpyfq+qNr5PfEqiDwhiAKEYMtcckYe4IHVYJP9ZXbjXWm2eDLrDv7WPuGerMuEde2enO+Snkc+E9unhMPVAMc9+/mO9LCANPdUtJVQvJuO4oVzSTX/GBljf2RIAE9LvcQ4oZI7fD4AJwlBtNLuFeiJWwCS9/c5QQHdNwldvMFhyxMkrAw9mfp4qcoZ+TXCh3PaUjkB2QHxJ1zMEeFHAcrX2yZq93fV9pYN9gbpIQiJ3ijcyktuEDpgmPa/STauxmwcF3B22zINBuaduiqaRKfeG0s0nlTFAJ7rjgDHhMkL697M3GOWJqssLHH48f8VF5c3iAH4PWyH7msClMNs2rKtau4k3NACdWT+xXpqdec08ON0dSeYb16tNt4XEV7BXcbIyJq5WRm13AH+FGBM1KgNnrbQ== vagrant@mgmt
            EOT
        }
      [32m+[0m[0m metadata_fingerprint = (known after apply)
      [32m+[0m[0m min_cpu_platform     = (known after apply)
      [32m+[0m[0m name                 = "web2"
      [32m+[0m[0m project              = "agisit-project-g1"
      [32m+[0m[0m self_link            = (known after apply)
      [32m+[0m[0m tags                 = [
          [32m+[0m[0m "web",
        ]
      [32m+[0m[0m tags_fingerprint     = (known after apply)
      [32m+[0m[0m terraform_labels     = (known after apply)
      [32m+[0m[0m zone                 = "europe-west2-c"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image  = "ubuntu-2004-focal-v20230918"
              [32m+[0m[0m labels = (known after apply)
              [32m+[0m[0m size   = (known after apply)
              [32m+[0m[0m type   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1mPlan:[0m 17 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m balancer          = (known after apply)
  [32m+[0m[0m balancer_ssh      = (known after apply)
  [32m+[0m[0m database          = (known after apply)
  [32m+[0m[0m database_ssh      = (known after apply)
  [32m+[0m[0m get_thoughts_IPs  = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m grafana           = (known after apply)
  [32m+[0m[0m prometheus        = (known after apply)
  [32m+[0m[0m quote_IPs         = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m send_thoughts_IPs = [
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m web_IPs           = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
[0m[1mgoogle_compute_firewall.get_thought_rules: Creating...[0m[0m
[0m[1mgoogle_compute_firewall.quote_rules: Creating...[0m[0m
[0m[1mgoogle_compute_instance.get[0]: Creating...[0m[0m
[0m[1mgoogle_compute_instance.quote[0]: Creating...[0m[0m
[0m[1mgoogle_compute_instance.database: Creating...[0m[0m
[0m[1mgoogle_compute_instance.balancer: Creating...[0m[0m
[0m[1mgoogle_compute_instance.grafana: Creating...[0m[0m
[0m[1mgoogle_compute_instance.send[0]: Creating...[0m[0m
[0m[1mgoogle_compute_instance.web[1]: Creating...[0m[0m
[0m[1mgoogle_compute_firewall.database_rules: Creating...[0m[0m
[0m[1mgoogle_compute_firewall.get_thought_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.quote_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.get[0]: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.quote[0]: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.database: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.balancer: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.grafana: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.send[0]: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.web[1]: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.database_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.database_rules: Creation complete after 12s [id=projects/agisit-project-g1/global/firewalls/database][0m
[0m[1mgoogle_compute_instance.web[0]: Creating...[0m[0m
[0m[1mgoogle_compute_firewall.get_thought_rules: Creation complete after 12s [id=projects/agisit-project-g1/global/firewalls/get][0m
[0m[1mgoogle_compute_firewall.web_rules: Creating...[0m[0m
[0m[1mgoogle_compute_firewall.quote_rules: Creation complete after 12s [id=projects/agisit-project-g1/global/firewalls/quote][0m
[0m[1mgoogle_compute_firewall.grafana_rules: Creating...[0m[0m
[0m[1mgoogle_compute_instance.web[1]: Creation complete after 12s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/web2][0m
[0m[1mgoogle_compute_firewall.frontend_rules: Creating...[0m[0m
[0m[1mgoogle_compute_instance.balancer: Creation complete after 13s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/balancer][0m
[0m[1mgoogle_compute_firewall.prometheus_rules: Creating...[0m[0m
[0m[1mgoogle_compute_instance.grafana: Creation complete after 13s [id=projects/agisit-project-g1/zones/europe-west1-c/instances/grafana][0m
[0m[1mgoogle_compute_instance.prometheus: Creating...[0m[0m
[0m[1mgoogle_compute_instance.quote[0]: Creation complete after 14s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/quote1][0m
[0m[1mgoogle_compute_firewall.send_thought_rules: Creating...[0m[0m
[0m[1mgoogle_compute_instance.get[0]: Creation complete after 14s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/get1][0m
[0m[1mgoogle_compute_instance.database: Creation complete after 14s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/database][0m
[0m[1mgoogle_compute_instance.send[0]: Creation complete after 14s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/send1][0m
[0m[1mgoogle_compute_instance.web[0]: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.web_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.grafana_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.frontend_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.prometheus_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_instance.prometheus: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.grafana_rules: Creation complete after 11s [id=projects/agisit-project-g1/global/firewalls/grafana][0m
[0m[1mgoogle_compute_firewall.send_thought_rules: Still creating... [10s elapsed][0m[0m
[0m[1mgoogle_compute_firewall.web_rules: Creation complete after 12s [id=projects/agisit-project-g1/global/firewalls/web][0m
[0m[1mgoogle_compute_instance.web[0]: Creation complete after 12s [id=projects/agisit-project-g1/zones/europe-west2-c/instances/web1][0m
[0m[1mgoogle_compute_firewall.frontend_rules: Creation complete after 11s [id=projects/agisit-project-g1/global/firewalls/frontend][0m
[0m[1mgoogle_compute_firewall.prometheus_rules: Creation complete after 12s [id=projects/agisit-project-g1/global/firewalls/prometheus][0m
[0m[1mgoogle_compute_firewall.send_thought_rules: Creation complete after 11s [id=projects/agisit-project-g1/global/firewalls/send][0m
[0m[1mgoogle_compute_instance.prometheus: Creation complete after 13s [id=projects/agisit-project-g1/zones/europe-west1-c/instances/prometheus][0m
[0m[1m[32m
Apply complete! Resources: 17 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mbalancer = "35.197.234.25"
balancer_ssh = "https://www.googleapis.com/compute/v1/projects/agisit-project-g1/zones/europe-west2-c/instances/balancer"
database = "35.189.105.67"
database_ssh = "https://www.googleapis.com/compute/v1/projects/agisit-project-g1/zones/europe-west2-c/instances/database"
get_thoughts_IPs = tolist([
  "get1 = 35.189.125.66",
])
grafana = "35.240.124.41"
prometheus = "104.155.27.197"
quote_IPs = tolist([
  "quote1 = 35.246.34.69",
])
send_thoughts_IPs = tolist([
  "send1 = 35.246.50.113",
])
web_IPs = tolist([
  "web1 = 34.89.23.154",
  "web2 = 34.147.192.76",
>>>>>>> parent of 77b575c (Altered gitignore)
])
